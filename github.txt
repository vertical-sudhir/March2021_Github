Git Hub-- (github.com)

-it is a memory that stores all Project Files.
-it is Central Repository.

- 

- Diffren Code Repository? 
 - SVN, GitHub, Bitbucket etc.


#) HEAD
#) Tag
#) Branch
will mentain by QM (Quality Manager.)

**) Download and Install git (open git bash..) 
1) Create Account on github.com

Operations on Git Hub

1) PUSH : we can send our Sysytem Files(Project) to github.
2) PULL : we can fetch other developers module files.
3) ADD : sending our files from workspace to staging area.
4)COMMIT : sending Stage Area files to Loacal Repository. 

#) Stage Area -- Area between Workspace and .get
#) .git  (Local Repository) (Local Machine)
#)github - (Central REpository) (github.com)



----------Git operation ------------------
1)add=> Write the code into Workspace then send it to stage area. 
   Sending our files to staging it's call as ADD operation
   - Stage Area is Verification Area.


2)commit=> Stage area files will be moved it to Local Repository (.git) .
3)push => Local Repository (.git) files sending to Remote Repository (github account)
4)pull => Fetch Files from Central Repository to Our Local Repository.
5)merge/Rebase => After pull we have to perform merge operation 
     - Update the file's from Local Repository (.git). to Workspace.

# While first time creating project  stage area will not involve -- directly we can create local Repository

 while sending the files Stage area will involves.

  
   rebase -- some times conflicts comes then we have to perform Rebase operation

Steps to Follow :-
1)  Create github Account.
    SignUp=>
    Create Account=>
    Complete Setup=>
    Verify Your Email Address=>

    Logout and Login Again=> github.com

 2) Create Repository=>
    Select Public Option => Create Repository.

2)  and there we need to create Remote Repository. (Repository is similar to Project)
3) and the Create Local Repository and then Perform Operations.

***)

#) Open Git bash terminal and follow below cammands
1)git config --global user.name Sudhir
2)git config --global user.email vertical.sudhir@gmail.com

to check it is set or not 
> git config --global user.email
> git config --global user.name

>code . => will open Visual Studio Code

Cloning & init 

init- will initalize from Start 
cloning  - will clone from repository.


1> git init  => initalize Local Repository.
> ls -lart  => it show all content/files

1) Untracked -- the files not related to git, 
2) Unmodified -- once we added the file into stage, it means it is under git observation.
               and it added into unmdified Stage.. 
               and once we make any changes /edit 
               from here we can remove the file also.

3) Modified  -- once we modified any file of unmodified stage it will come to modified area..
             from here it will send back to staged area.


4) Staged -- after  staged we cave to commit the changes , and the again file goes to unmodified area.


> git status   .... will show all files of Local Repository (Untracked Files)

>git add <filename>  --- file moves to stageing area.

  i.e git add index.html  

>git commit   --- to start project tracking we have to commit it (and that is initial commit)
   => it opens VM Editor 
   => Press "i" to write => and then give msg of commit.. like what changes you made..
   => then press "Esc" => :wq => "Enter"

> git add -A  => to add all files to stage area


> git commit -m "msg"

> git checkout <file name> ==> to recover single file. will matching with last commit  

> git checkout -f ===> to recover all files with matching  last commit.

> git log ==> will give details about whatever we commited..

> git log -p ==> will give last commit details only, with changes details 

> q   => to  exit

> git diff => will compare working Area with stagging area..

> git rm <file name> ==> will delete and also remove from git Staging area

> touch .gitignore    ==> will ignore the file from staging area
  > git checkout <filename>   

   -- will ignore the file from staging area..
    -- also we can add folder to skip..
  --also we can add to skip all file of perticular type  ..like .doc all file if we want to exclude then 
   "*.doc"

> git remote add origin "repo name"
> git push origin master  (Here it will ask Email and Password....for authentication Purpose)
.....to add local Repository to Remote Reposiitory  


----------------------------------------------------------------------------------




1) git config --global user.email "vertical.sudhir@gmail.com"

2) git config --global user.name "Sudhir Atkire"

3) git init 

4) git status

5) git add [file name] || -A

6) git status

7) git commit -m "msg"

8) git remote add origin "repo name"

9) git push origin master

10) git clone "repo name"


